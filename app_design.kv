WindowManager:
    LoginScreen:
    ApplicationFormWindow:
    EditFormItemWindow:
    ApplyCadetScreen:
    AdminDash:
    AdminProfile:
    ViewApplicantScreen:
    ShowApplicantInfoScreen:
    CadetDash:
    AboutScreen:
    SettingsScreen:
    PasswordRecoveryWindow:
    NoticeScreen:
    CreateNoticeScreen:
    ShowNoticeScreen:

#: import utils kivy.utils

<LoginScreen>:
    name: "LoginScreen"

    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"

                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(7)

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])

                    Widget:

    MDLabel:
        id: login_label
        text: "Cadet Login"
        pos_hint: {"center_x":0.5,"center_y":0.76}
        font_style: "H5"
        halign: 'center'
        valign: 'middle'

    BoxLayout:
        orientation: 'vertical'
        pos_hint: {"center_x":0.5,"center_y":0.2}

        GridLayout:
            cols: 1
            rows: 4
            size_hint_x: None
            width: "220sp"
            pos_hint: {"center_x":0.5,"center_y":0.5}
            spacing : "8sp"

            MDTextField:
                id: username_textfield
                hint_text : "Type Cadet Id or Email"
                helper_text: "or click forget password"
                helper_text_mode: "on_focus"
                icon_right: "account"
                icon_right_color: "white" if app.theme_cls.theme_style == "Dark" else "black"
                on_focus: root.auto_complete()

            MDTextField:
                id: password_textfield
                hint_text: "Type Password"
                helper_text: "or click forget password"
                helper_text_mode: "on_focus"
                icon_right: "key-variant"
                icon_right_color: "white" if app.theme_cls.theme_style == "Dark" else "black"
                password: True


            GridLayout:
                cols: 2
                rows: 1
                size_hint: 1, 0.05

                MDCheckbox:
                    id: remember_check
                    size_hint_x: 0.1

                MDLabel:
                    size_hint_x : 0.9
                    text: "Remember Me"



            GridLayout:
                cols: 2
                rows: 1
                spacing: "20sp"

                MDRectangleFlatButton:
                    id: log_in
                    text: "Log In"
                    on_release:
                        root.log_in_btn()

                MDRectangleFlatButton:
                    text: "Forget Password"
                    on_release:
                        root.manager.current = "PasswordRecoveryWindow"

    MDRaisedButton:
        id: change_user
        text: "Go to Admin Login"
        pos_hint: {"center_x":0.48,"center_y":0.26}
        font_style: "Caption"
        on_release:
            username_textfield.text = ''
            password_textfield.text = ''
            if change_user.text == "Go to Admin Login": \
            login_label.text = "Admin Login"; \
            change_user.text = "Go to Cadet Login"; \
            username_textfield.hint_text = "Type Username or Email";
            else: \
            login_label.text = "Cadet Login"; \
            change_user.text = "Go to Admin Login"; \
            username_textfield.hint_text = "Type Cadet Id or Email";

    MDLabel:
        text: "OR"
        pos_hint: {"center_x":0.95,"center_y":0.18}
        font_style: "Caption"

    MDRectangleFlatButton:
        id: apply_btn
        text: "Apply to be Cadet"
        line_width: .1
        pos_hint: {"center_x":0.48,"center_y":0.12}
        font_style: "Subtitle1"
        on_release:
            root.manager.get_screen("ApplyCadetScreen").create_form()
            root.manager.current = "ApplyCadetScreen"



<AdminDash>:
    name: "AdminDash"

    MDGridLayout:

        cols: 1
        rows: 4
        spacing: 40
        padding: 20
        adaptive_size: True
        pos_hint: {"center_x":0.5,"center_y":0.5}
        valign: "middle"

        MDRaisedButton:
            text: "View Applicants"
            on_release:
                root.manager.get_screen("ViewApplicantScreen").clear_widgets()
                root.manager.get_screen("ViewApplicantScreen").applicants_dic = {}
                root.manager.get_screen("ViewApplicantScreen").applicant_type = "Pending"
                root.manager.get_screen("ViewApplicantScreen").show_applicant_list()
                root.manager.current = "ViewApplicantScreen"

        MDRaisedButton:
            text: "Application Form"
            on_release:
                root.manager.get_screen("ApplicationFormWindow").show_form()
                root.manager.current = "ApplicationFormWindow"


        MDRaisedButton:
            text: "Cadets to be Reviewed"
            on_release:
                root.manager.get_screen("ViewApplicantScreen").clear_widgets()
                root.manager.get_screen("ViewApplicantScreen").applicants_dic = {}
                root.manager.get_screen("ViewApplicantScreen").applicant_type = "Approved"
                root.manager.get_screen("ViewApplicantScreen").show_applicant_list()
                root.manager.current = "ViewApplicantScreen"

        MDRaisedButton:
            text: "View Notice"
            on_release:
                root.manager.get_screen("NoticeScreen").notice_dic = {}
                root.manager.get_screen("NoticeScreen").show_notices()
                root.manager.current = "NoticeScreen"
                nav_drawer.set_state("closed")

    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)
                        left_action_items: [["menu", lambda x : nav_drawer.set_state("toggle")]]

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])


                    Widget:

    MDNavigationDrawer:
        id: nav_drawer
        size_hint_x: None
        width: root.width * (3/4)

        BoxLayout:
            orientation: "vertical"
            padding: 30, 60
            spacing : 20

            MDLabel:
                text: "Admin Dash"
                size_hint_y: None
                height: self.texture_size[1]
                padding: (80,20)

            ScrollView:
                MDList:
                    OneLineListItem:
                        text: "Dash"
                        on_release:
                            root.manager.current = "AdminDash"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "Profile"
                        on_release:
                            root.manager.get_screen("AdminProfile").show_admin()
                            root.manager.get_screen("AdminProfile").set_navigation()
                            root.manager.current = "AdminProfile"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "Cadets Info"
                        on_release:
                            root.manager.get_screen("ViewApplicantScreen").clear_widgets()
                            root.manager.get_screen("ViewApplicantScreen").applicants_dic = {}
                            root.manager.get_screen("ViewApplicantScreen").applicant_type = "Cadet"
                            root.manager.get_screen("ViewApplicantScreen").show_applicant_list()
                            root.manager.current = "ViewApplicantScreen"

                    OneLineListItem:
                        text: "Notice Board"
                        on_release:
                            #if root.manager.get_screen("AdminProfile").ids.nav_dash.text == "Admin Dash": \
                            #root.manager.get_screen("NoticeScreen").add_widget(root.manager.get_screen("NoticeScreen").action_button);

                            root.manager.get_screen("NoticeScreen").notice_dic = {}
                            root.manager.get_screen("NoticeScreen").show_notices()
                            root.manager.current = "NoticeScreen"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "About"
                        on_release:
                            root.manager.current = "AboutScreen"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "Settings"
                        on_release:
                            root.manager.current = "SettingsScreen"

                    OneLineListItem:
                        text: "Log Out"
                        on_release:
                            nav_drawer.set_state("closed")
                            root.manager.get_screen("AdminDash").ids.nav_drawer.set_state("closed")
                            root.manager.get_screen("CadetDash").ids.nav_drawer.set_state("closed")
                            root.manager.get_screen("ShowNoticeScreen").remove_del_btn()
                            root.manager.current = "LoginScreen"
<CadetDash>:
    name: "CadetDash"

    MDBoxLayout:

        pos_hint: {'center_x':0.48}
        orientation: 'vertical'
        padding: 50


        MDGridLayout:
            cols: 1
            padding: sp(0),sp(30),sp(0),sp(15)

            ScrollView:
                size_hint : 0.6, None
                height: root.height - sp(100)

                MDList:
                    id: cadet_info

        MDFloatLayout:
            size_hint : None, None
            size: sp(100),sp(100)
            Image:
                id: cadet_profile_photo
                source : ''
                pos: (root.width - (self.width+20), root.height - (self.height + sp(80)))


    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)
                        left_action_items: [["menu", lambda x : nav_drawer.set_state("toggle")]]

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])

                    Widget:

    MDNavigationDrawer:
        id: nav_drawer
        size_hint_x: None
        width: root.width * (3/4)

        BoxLayout:
            orientation: "vertical"
            padding: 30, 60
            spacing : 20

            MDLabel:
                text: "Cadet Dash"
                size_hint_y: None
                height: self.texture_size[1]
                padding: (80,20)

            ScrollView:
                MDList:

                    OneLineListItem:
                        text: "Profile"
                        on_release:
                            root.manager.get_screen("CadetDash").show_cadet()
                            nav_drawer.set_state("closed")
                            root.manager.current = "CadetDash"

                    OneLineListItem:
                        text: "Admin Info"
                        on_release:
                            root.manager.get_screen("AdminProfile").show_admin()
                            root.manager.get_screen("AdminProfile").set_navigation()
                            root.manager.current = "AdminProfile"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "Notice Board"
                        on_release:
                            root.manager.get_screen("NoticeScreen").notice_dic = {}
                            root.manager.get_screen("NoticeScreen").show_notices()
                            root.manager.current = "NoticeScreen"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "About"
                        on_release:
                            root.manager.current = "AboutScreen"

                    OneLineListItem:
                        text: "Settings"
                        on_release:
                            root.manager.current = "SettingsScreen"

                    OneLineListItem:
                        text: "Log Out"
                        on_release:
                            nav_drawer.set_state("closed")
                            root.manager.get_screen("AdminDash").ids.nav_drawer.set_state("closed")
                            root.manager.get_screen("CadetDash").ids.nav_drawer.set_state("closed")
                            root.manager.current = "LoginScreen"


<ApplyCadetScreen>:
    name: "ApplyCadetScreen"

    MDBoxLayout:
        size_hint_y: None
        height: root.height - sp(60)
        orientation: 'vertical'

        ScrollView:
            MDList:
                MDGridLayout:

                    id: application_form
                    cols: 2
                    size_hint: None, None
                    size: ((root.width - sp(30)),self.minimum_height)
                    pos_hint_y: 1
                    spacing: 30
                    padding: 18

                MDGridLayout:
                    cols: 2
                    rows: 1
                    size_hint: None, None
                    size: ((root.width - sp(30)),self.minimum_height)
                    padding: 150, 20, 150, 20
                    spacing : 30
                    MDRectangleFlatButton:
                        text: "Apply"
                        on_release:
                            root.confirm_apply_btn()
                    MDRectangleFlatButton:
                        text: "Go Back"
                        on_release:
                            root.manager.current = "LoginScreen"
                            application_form.clear_widgets()

    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])
                    Widget:

<AdminProfile>:
    name: "AdminProfile"

    MDBoxLayout:

        pos_hint: {'center_x':0.48}
        orientation: 'vertical'
        padding: 50


        MDGridLayout:
            cols: 1
            padding: sp(0),sp(30),sp(0),sp(15)

            ScrollView:
                size_hint : 0.6, None
                height: root.height - sp(100)

                MDList:
                    id: admin_info

        MDFloatLayout:
            size_hint : None, None
            size: sp(100),sp(100)
            Image:
                id: admin_profile_photo
                source : ''
                pos: (root.width - (self.width+20), root.height - (self.height + sp(55)))


    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)
                        left_action_items: [["menu", lambda x : nav_drawer.set_state("toggle")]]

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])

                    Widget:

    MDNavigationDrawer:
        id: nav_drawer
        size_hint_x: None
        width: root.width * (3/4)

        BoxLayout:
            orientation: "vertical"
            padding: 30, 60
            spacing : 20

            MDLabel:
                id: nav_label
                size_hint_y: None
                height: self.texture_size[1]
                padding: (80,20)

            ScrollView:
                MDList:
                    OneLineListItem:
                        id: nav_dash
                        on_release:
                            if nav_label.text == "Admin Dash": \
                            nav_drawer.set_state("closed"); \
                            root.manager.current = "AdminDash";

                    OneLineListItem:
                        id: nav_profile
                        text: "Profile"
                        on_release:
                            if nav_dash.text == "Dash": \
                            root.manager.get_screen("AdminProfile").set_navigation();\
                            root.manager.get_screen("AdminProfile").show_admin();\
                            root.manager.current = "AdminProfile";
                            else:\
                            nav_drawer.set_state("closed");\
                            root.manager.current = "CadetDash";


                    OneLineListItem:
                        id: nav_user_info
                        on_release:
                            if self.text == "Cadets Info": \
                            root.manager.get_screen("ViewApplicantScreen").clear_widgets();\
                            root.manager.get_screen("ViewApplicantScreen").applicants_dic = {};\
                            root.manager.get_screen("ViewApplicantScreen").applicant_type = "Cadet";\
                            root.manager.get_screen("ViewApplicantScreen").show_applicant_list();\
                            root.manager.current = "ViewApplicantScreen";
                            else:\
                            nav_drawer.set_state("closed");


                    OneLineListItem:
                        id: nav_notice_board
                        text: "Notice Board"
                        on_release:
                            #if nav_dash.text == "Admin Dash": \
                            #root.manager.get_screen("NoticeScreen").add_widget(root.manager.get_screen("NoticeScreen").action_button);

                            root.manager.get_screen("NoticeScreen").notice_dic = {}
                            root.manager.get_screen("NoticeScreen").show_notices()
                            root.manager.current = "NoticeScreen"
                            nav_drawer.set_state("closed")

                    OneLineListItem:
                        text: "About"
                        on_release:
                            root.manager.current = "AboutScreen"

                    OneLineListItem:
                        id: nav_settings
                        text: "Settings"
                        on_release:
                            root.manager.current = "SettingsScreen"

                    OneLineListItem:
                        text: "Log Out"
                        on_release:
                            nav_drawer.set_state("closed")
                            root.manager.get_screen("AdminDash").ids.nav_drawer.set_state("closed")
                            root.manager.get_screen("CadetDash").ids.nav_drawer.set_state("closed")
                            root.manager.current = "LoginScreen"
                            if nav_dash.text == "Admin Dash":\
                            root.manager.get_screen("ShowNoticeScreen").remove_del_btn()


<ViewApplicantScreen>:
    name: "ViewApplicantScreen"

<ShowApplicantInfoScreen>:
    name: "ShowApplicantInfoScreen"

    MDBoxLayout:
        id: applicant_info_box
        size_hint_y: None
        height: root.height
        orientation: 'vertical'


        MDGridLayout:
            cols: 1
            padding: sp(0),sp(30),sp(0),sp(15)

            ScrollView:
                size_hint : 0.6, None
                height: root.height - sp(100)

                MDList:
                    id: cadet_info

        MDFloatingActionButtonSpeedDial:
            id: floating_btn
            data: root.data
            size_hint_y: 0.2
            root_button_anim: True
            callback: root.callback
            on_open: root.open()
            on_close: root.close()

        MDFloatLayout:
            size_hint : None, None
            size: sp(100),sp(100)
            Image:
                id: cadet_profile_photo
                source : ''
                pos: (root.width - (self.width+20), root.height - (self.height + sp(50)))


<NoticeScreen>:
    name: "NoticeScreen"

<CreateNoticeScreen>:
    name: "CreateNoticeScreen"
    MDBoxLayout:
        orientation: 'vertical'

        MDGridLayout:
            rows: 3
            cols: 1
            padding: 50, 15

            MDTextField:
                id: notice_title
                size_hint_y: 0.1
                hint_text: 'type notice title'
                multiline: False
                max_text_length: 250
                line_color_focus: utils.get_color_from_hex("#fc7b03")
                mode: 'rectangle'

            MDTextField:
                id: notice_textfield
                size_hint_y: 0.8
                hint_text: 'type notice here'
                multiline: True
                max_text_length: 990
                mode: 'rectangle'

            MDGridLayout:
                cols: 2
                rows: 1
                size_hint_y: 0.1

                MDRaisedButton:
                    text: "Create"
                    on_release:
                        root.create_notice(notice_title.text, notice_textfield.text)

                MDRaisedButton:
                    text: "Clear"
                    on_release:
                        notice_title.text = ''
                        notice_textfield.text = ''

<ShowNoticeScreen>:
    name: "ShowNoticeScreen"

    GridLayout:
        cols: 1
        rows: 2
        padding: 50, 0

        Label:
            id: notice_title
            text: ''
            size_hint_y: 0.2
            color: utils.get_color_from_hex("#fc7b03")
            font_size: self.width/10

        ScrollView:
            Label:
                id: notice_text
                size_hint_y: None
                height: self.texture_size[1]
                text_size: self.width, None
                text: ''
                font_size: self.width/15

<AboutScreen>:
    name: "AboutScreen"

    MDBoxLayout:
        orientation: 'vertical'
        padding: 50

        MDLabel:
            text: "Developer"
            halign: 'center'
            valign: 'middle'

        MDLabel:
            text: "Saad Ibne Sohael"
            halign: 'center'
            valign: 'middle'

        MDLabel:
            text: "Contact"
            halign: 'center'
            valign: 'middle'

        MDGridLayout:
            cols: 3
            rows: 1
            spacing : 30
            pos_hint: {'center_x':0.5}
            adaptive_size: True

            MDRectangleFlatButton:
                text: "Gmail"
                line_color: utils.get_color_from_hex("#EA4335")
                on_release:
                    root.open_web("gmail")

            MDRectangleFlatButton:
                text: "Facebook"
                line_color: utils.get_color_from_hex("#4267B2")
                on_release:
                    root.open_web("facebook")

            MDRectangleFlatButton:
                text: "Instagram"
                line_color: utils.get_color_from_hex("#fbad50")
                on_release:
                    root.open_web("instagram")


<SettingsScreen>:
    name: "SettingsScreen"

    MDCard:
        id: settings_mdcard
        orientation: "vertical"
        size_hint: None, None
        size: root.width - dp(50), root.height - dp(200)
        pos_hint: {"center_x":0.5, "center_y":0.4}
        adaptive_size: True

        FloatLayout:
            adaptive_size: True
            pos_hint: {"center_x":0.5}
            spacing: "10dp"
            MDLabel:
                id: theme_style_label
                text: "Theme Style - "
                adaptive_size: True
                pos_hint: {"center_x":0.3,"center_y":0.7}
            MDRaisedButton:
                id: theme_style_change_btn
                text: "Dark" if app.theme_cls.theme_style == "Dark" else "Light"
                pos_hint: {"center_x":0.8,"center_y":0.7}
                md_bg_color: utils.get_color_from_hex("#161716") if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#ebe4e4")
                text_color: [1,1,1,1] if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#000000")
                on_release: app.change_theme_style()
            MDLabel:
                id: primary_palette_label
                text: "App Color - {}".format(app.theme_cls.primary_palette)
                adaptive_size: True
                pos: theme_style_label.pos[0], theme_style_label.pos[1] - dp(50)
            MDGridLayout:
                id: primary_palette_change_btn
                pos_hint: {"center_x":0.38, "center_y":0.42}
                cols: 3
                rows: 1
                adaptive_size: True
                MDRaisedButton:
                    text: "Orange"
                    md_bg_color: utils.get_color_from_hex("#FF9100") if app.theme_cls.primary_palette != "Orange" else utils.get_color_from_hex("#FF9100")
                    on_release:
                        app.change_primary_palette("Orange")
                        theme_style_change_btn.md_bg_color = utils.get_color_from_hex("#161716") if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#ebe4e4")
                        theme_style_change_btn.text_color = [1,1,1,1] if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#000000")
                MDRaisedButton:
                    text: "Red"
                    md_bg_color: utils.get_color_from_hex("#FF2725") if app.theme_cls.primary_palette != "Red" else utils.get_color_from_hex("#FF2725")
                    on_release:
                        app.change_primary_palette("Red")
                        theme_style_change_btn.md_bg_color = utils.get_color_from_hex("#161716") if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#ebe4e4")
                        theme_style_change_btn.text_color = [1,1,1,1] if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#000000")
                MDRaisedButton:
                    text: "Green"
                    md_bg_color: utils.get_color_from_hex("#00B241") if app.theme_cls.primary_palette != "Green" else utils.get_color_from_hex("#00B241")
                    on_release:
                        app.change_primary_palette("Green")
                        theme_style_change_btn.md_bg_color = utils.get_color_from_hex("#161716") if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#ebe4e4")
                        theme_style_change_btn.text_color = [1,1,1,1] if app.theme_cls.theme_style == "Dark" else utils.get_color_from_hex("#000000")

    FloatLayout:
        canvas:
            Color:
                rgba: 1,1,1,1
            Ellipse:
                size: 200, 200
                pos: settings_mdcard.pos[0] + settings_mdcard.width//2 - 100, settings_mdcard.pos[1] + settings_mdcard.height - 100
                source: 'Bncc_logo.png'
                angle_start: 0
                angle_end: 360

    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])
                    Widget:





<ApplicationFormWindow>:
    name: "ApplicationFormWindow"

    MDCard:
        pos_hint: {'center_x':0.5, 'center_y':0.6}
        size_hint: None, None
        size: root.width - sp(100),root.height - sp(150)
        orientation: 'vertical'
        padding: 50

        ScrollView:
            size_hint_y : 0.9

            MDList:
                MDGridLayout:
                    id: edit_application_form
                    cols: 1
                    size_hint: None, None
                    size: ((root.width - sp(30)),self.minimum_height)
                    spacing: 60

    MDGridLayout:
        cols: 2
        rows: 1
        pos_hint: {"center_x":0.5,"center_y":0.1}
        adaptive_size: True
        spacing: 30

        MDRectangleFlatButton:
            text: "Add or Edit Items"
            on_release:
                root.manager.get_screen("EditFormItemWindow").ids.drop_item.text = root.manager.get_screen("EditFormItemWindow").form_items_names[0]
                try:\
                root.manager.current = 'EditFormItemWindow';
                except:\
                pass

        MDRectangleFlatButton:
            text: "Remove Items"
            on_release:
                root.manager.get_screen('EditFormItemWindow').ids.add_toggle_btn.disabled = True
                root.manager.get_screen('EditFormItemWindow').ids.edit_toggle_btn.disabled = True
                root.manager.get_screen('EditFormItemWindow').ids.item_place_label.text = 'Select Item'
                root.manager.get_screen('EditFormItemWindow').ids.item_name_input.disabled = True
                root.manager.get_screen('EditFormItemWindow').ids.add_or_edit_btn.text = "Remove Item"
                try:\
                root.manager.current = 'EditFormItemWindow';
                except:\
                pass

<EditFormItemWindow>:
    name: "EditFormItemWindow"

    MDBoxLayout:
        size_hint_y: None
        height: root.height - sp(200)
        orientation: "vertical"

        GridLayout:
            size_hint: None, None
            size: ((root.width - sp(30)),self.minimum_height)
            cols: 2
            rows: 3
            padding: 15
            spacing : 40
            pos_hint: {'center_y': 0.8}

            MDLabel:
                id: item_name_label
                text: 'Item Name : '
                size_hint_x: None
                width: sp(100)

            MDTextField:
                id: item_name_input
                hint_text: 'type item name...'
                size_hint_x: None
                width: sp(100)

            MDLabel:
                id: item_place_label
                text: 'Place at : '
                size_hint_x: 0.5

            MDDropDownItem:
                id: drop_item
                size_hint_x: 0.5
                on_release:
                    root.item_dropdown_()

            MDRaisedButton:
                id: add_or_edit_btn
                text: "Edit Item" if edit_toggle_btn.state == 'down' else "Add Item To Form"
                on_release:
                    root.do_stuffs()

        Widget:

    MDNavigationLayout:
        ScreenManager:
            Screen:
                BoxLayout:
                    orientation: "vertical"
                    MDToolbar:
                        title: "RC BNCC"
                        elevation: sp(8)

                        Image:
                            source: "Bncc_logo.png"
                            pos: (((self.parent.size[0])/1.5)-20,self.pos[1])
                    Widget:

    GridLayout:

        cols: 2
        rows: 1
        size_hint: None, 0.1
        width: sp(250)
        pos_hint:{'center_x':0.5,'center_y':0.8}
        spacing: 50
        background_normal: ' '

        ToggleButton:
            id: add_toggle_btn
            text: "ADD ITEMS"
	        background_normal: ''
	        background_color: utils.get_color_from_hex("#6ab83a")
	        disabled: True if edit_toggle_btn.state == 'down' else False
	        on_release:
	            root.change_texts()


        ToggleButton:
            id: edit_toggle_btn
            text: "EDIT ITEMS"
	        background_normal: ''
	        background_color: utils.get_color_from_hex("#6ab83a")
	        disabled: True if add_toggle_btn.state == 'down' else False
            on_release:
                root.change_texts()

<PasswordRecoveryWindow>:
    name: "PasswordRecoveryWindow"

    MDBoxLayout:
        orientation: 'vertical'
        pos_hint:{'center_y':0.45}

        MDGridLayout:
            cols: 1
            rows: 2
            padding: 15, 20

            MDGridLayout:
                id: recovery_items
                cols: 2
                rows: 2
                spacing: 0,50

                MDLabel:
                    text: "Enter Registered Mail : "
                    size_hint_x: None
                    width: sp(140)

                MDTextField:
                    id: mail_address
                    hint_text: "enter your email id..."
                    mode: 'fill'

                MDRaisedButton:
                    id: send_otp_btn
                    text: "Send OTP"
                    on_release:
                        root.send_otp()

                MDLabel:
                    id: countdown

            MDGridLayout:

                id: reset_items
                cols: 2
                rows: 4

        Widget:

